Spring Starter for SQL

Creating JPA project from scratch:

1) Include JAVA and Gradle
Dependencies:
   Add thymeleaf, H2, JPA, DEVtools 
   (when using thymeleaf you don't need to add web)

   artifact = file name 
   


2) GIT BASH
./gradlew eclipse

3) Call model an Entity<--import

We want the database to create the ID's for us

Specify the ID 
@Id <-- Primary Key because its a realational database other kinds of database don't have primary keys
@GeneratedValue <-- adding 1 to whatever the highest ID is (could ebe different for different databases)
@GeneratedVale(strategy = GenerationType.AUTO)

@Column (name = "")
@Column (nullable = false)
private String "";


CrudRepository (Create Read Update Delete)
Holds all the methods we us./ed in the repository for review site
4) Turn repo into an interface and have it extend the crud repository. <T, Id>
Requires T(Type) Id(Can be turned into a string) extends Serializable 

@Component
Create a (model) demoPopulator 
create reop inisde 
We can make a CommandLine Runner (an interface that is really simple String ...ags means you can pass it as anything you want )

*JPA needs a no argument constructor

Open SQL template
localhost:8080/h2-console inbedded in the system and is only avaible when the app is running
jdbc:h2:mem:testdb
creates temp database mem= in memory db = database
Created for testing
Shows the app and its columns
SELECT*FROM table name;


H2 database.com

to create a table using thymeleaf you must add to the model 
In fishes example genus and species were strings but if you turn them into objects then it is possible to create two tables and connect them later with a primary and forgien key


Review Site:
WorldMap <-- model

continents
form inputs countries
click on countries to get info and table

Table contains:
population


Forms: 
HTML
<form>
rise of single page apps
submits a form
form tag and form action
look at mozilla forms for more info
<label> is anothe element that we can use

add form to countries detail





